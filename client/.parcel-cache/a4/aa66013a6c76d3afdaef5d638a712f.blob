'use strict';
import   "7f7956ad24180dea469ca80ee5841416:./../utils";
function $7f7956ad24180dea469ca80ee5841416$var$InterceptorManager() {
    this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */ $7f7956ad24180dea469ca80ee5841416$var$InterceptorManager.prototype.use = function use(fulfilled, rejected) {
    this.handlers.push({
        fulfilled: fulfilled,
        rejected: rejected
    });
    return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */ $7f7956ad24180dea469ca80ee5841416$var$InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) this.handlers[id] = null;
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */ $7f7956ad24180dea469ca80ee5841416$var$InterceptorManager.prototype.forEach = function forEach(fn) {
    $7f7956ad24180dea469ca80ee5841416$import$61f3fc819ec50e70$40f3d9558cf6e846(this.handlers, function forEachHandler(h) {
        if (h !== null) fn(h);
    });
};
$7f7956ad24180dea469ca80ee5841416$exports = $7f7956ad24180dea469ca80ee5841416$var$InterceptorManager;
