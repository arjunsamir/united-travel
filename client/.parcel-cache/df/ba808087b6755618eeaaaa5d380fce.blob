"use strict";
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _withReduxForm = _interopRequireDefault(require("../../libs/hocs/withReduxForm"));
var _RenderIf = _interopRequireDefault(require("../RenderIf"));
var _label = _interopRequireDefault(require("../Input/label"));
var _utils = require("../../libs/utils");
var _context = require("./context");
var _container = _interopRequireDefault(require("./styled/container"));
var _optionsContainer = _interopRequireDefault(require("./styled/optionsContainer"));
var _errorText = _interopRequireDefault(require("../Input/styled/errorText"));
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf2["default"](Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf2["default"](this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn2["default"](this, result);
    };
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
/**
 * A VisualPicker can be either radio buttons, checkboxes, or links that are visually enhanced.
 * @category Form
 */ var VisualPicker1 = /*#__PURE__*/ function(_Component) {
    _inherits2["default"](VisualPicker2, _Component);
    var _super = _createSuper(VisualPicker2);
    function VisualPicker2(props) {
        var _this;
        _classCallCheck2["default"](this, VisualPicker2);
        _this = _super.call(this, props);
        _this.errorId = _utils.uniqueId('error-message');
        _this.groupNameId = props.name || _utils.uniqueId('visual-picker');
        _this.handleChange = _this.handleChange.bind(_assertThisInitialized2["default"](_this));
        return _this;
    }
    _createClass2["default"](VisualPicker2, [
        {
            key: "getErrorMessageId",
            value: function getErrorMessageId() {
                var error = this.props.error;
                if (error) return this.errorId;
                return undefined;
            }
        },
        {
            key: "handleChange",
            value: function handleChange(optionName, isChecked) {
                var _this$props = this.props, onChange = _this$props.onChange, multiple = _this$props.multiple, value = _this$props.value;
                var currentValue = optionName;
                if (multiple) {
                    if (!Array.isArray(value)) currentValue = isChecked ? [
                        optionName
                    ] : [];
                    else currentValue = isChecked ? [].concat(_toConsumableArray2["default"](value), [
                        optionName
                    ]) : value.filter(function(item) {
                        return item !== optionName;
                    });
                }
                onChange(currentValue);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props2 = this.props, style = _this$props2.style, label = _this$props2.label, labelAlignment = _this$props2.labelAlignment, hideLabel = _this$props2.hideLabel, required = _this$props2.required, error = _this$props2.error, id = _this$props2.id, children = _this$props2.children, value = _this$props2.value, multiple = _this$props2.multiple, className = _this$props2.className, size = _this$props2.size;
                var context = {
                    ariaDescribedby: this.getErrorMessageId(),
                    groupName: this.groupNameId,
                    privateOnChange: this.handleChange,
                    value: value,
                    multiple: multiple,
                    size: size
                };
                return(/*#__PURE__*/ _react["default"].createElement(_container["default"], {
                    id: id,
                    className: className,
                    style: style
                }, /*#__PURE__*/ _react["default"].createElement(_RenderIf["default"], {
                    isTrue: label
                }, /*#__PURE__*/ _react["default"].createElement(_label["default"], {
                    label: label,
                    labelAlignment: labelAlignment,
                    hideLabel: hideLabel,
                    required: required,
                    as: "legend"
                })), /*#__PURE__*/ _react["default"].createElement(_optionsContainer["default"], null, /*#__PURE__*/ _react["default"].createElement(_context.Provider, {
                    value: context
                }, children)), /*#__PURE__*/ _react["default"].createElement(_RenderIf["default"], {
                    isTrue: error
                }, /*#__PURE__*/ _react["default"].createElement(_errorText["default"], {
                    id: this.getErrorMessageId()
                }, error))));
            }
        }
    ]);
    return VisualPicker2;
}(_react.Component);
VisualPicker1.propTypes = {
    /** The name of VisualPicker. */ name: _propTypes["default"].string,
    /** The value of the element. */ value: _propTypes["default"].oneOfType([
        _propTypes["default"].string,
        _propTypes["default"].arrayOf(_propTypes["default"].string)
    ]),
    /** The id of the outer element. */ id: _propTypes["default"].string,
    /** The action triggered when a value attribute changes. */ onChange: _propTypes["default"].func,
    /** If is set to true the VisualPicker is required. This value defaults to false. */ required: _propTypes["default"].bool,
    /** The title at the top of the VisualPicker component. */ label: _propTypes["default"].oneOfType([
        _propTypes["default"].string,
        _propTypes["default"].node
    ]),
    /** Describes the position of the VisualPicker label. Options include left, center and right.
   * This value defaults to center. */ labelAlignment: _propTypes["default"].oneOf([
        'left',
        'center',
        'right'
    ]),
    /** A boolean to hide the VisualPicker label. */ hideLabel: _propTypes["default"].bool,
    /** Specifies that an VisualPicker must be filled out before submitting the form. */ error: _propTypes["default"].oneOfType([
        _propTypes["default"].string,
        _propTypes["default"].node
    ]),
    /** The class name of the root element. */ className: _propTypes["default"].string,
    /** It is an object with custom style applied to the root element. */ style: _propTypes["default"].object,
    /** The size of the VisualPicker. Valid values are small, medium, and large.
   * This value defaults to medium. */ size: _propTypes["default"].oneOf([
        'small',
        'medium',
        'large'
    ]),
    /**
   * This prop that should not be visible in the documentation.
   * @ignore
   */ children: _propTypes["default"].oneOfType([
        _propTypes["default"].arrayOf(_propTypes["default"].node),
        _propTypes["default"].object
    ]),
    /** If true then a multiple selection is allowed */ multiple: _propTypes["default"].bool
};
VisualPicker1.defaultProps = {
    name: null,
    value: undefined,
    id: undefined,
    onChange: function onChange() {
    },
    required: false,
    label: null,
    labelAlignment: 'center',
    hideLabel: false,
    error: null,
    className: undefined,
    style: undefined,
    size: 'medium',
    children: [],
    multiple: false
};
var _default = _withReduxForm["default"](VisualPicker1);
exports["default"] = _default;
