(function(e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e(null) : "function" == typeof define && define.amd ? define(e(null)) : window.stylis = e(null);
})(function e(a) {
    "use strict";
    var r = /^\0+/g, c = /[\0\r\f]/g, s = /: */g, t = /zoo|gra/, i = /([,: ])(transform)/g, f = /,+\s*(?![^(]*[)])/g, n = / +\s*(?![^(]*[)])/g, l = / *[\0] */g, o = /,\r+?/g, h = /([\t\r\n ])*\f?&/g, u = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, d = /\W+/g, b = /@(k\w+)\s*(\S*)\s*/, p = /::(place)/g, k = /:(read-only)/g, g = /\s+(?=[{\];=:>])/g, A = /([[}=:>])\s+/g, C = /(\{[^{]+?);(?=\})/g, w = /\s{2,}/g, v = /([^\(])(:+) */g, m = /[svh]\w+-[tblr]{2}/, x = /\(\s*(.*)\s*\)/g, $ = /([\s\S]*?);/g, y = /-self|flex-/g, O = /[^]*?(:[rp][el]a[\w-]+)[^]*/, j = /stretch|:\s*\w+\-(?:conte|avail)/, z = /([^-])(image-set\()/, N = "-webkit-", S = "-moz-", F = "-ms-", W = 59, q = 125, B = 123, D = 40, E = 41, G = 91, H = 93, I = 10, J = 13, K = 9, L = 64, M = 32, P = 38, Q = 45, R = 95, T = 42, U = 44, V = 58, X = 39, Y = 34, Z = 47, _ = 62, ee = 43, ae = 126, re = 0, ce = 12, se = 11, te = 107, ie = 109, fe = 115, ne = 112, le = 111, oe = 105, he = 99, ue = 100, de = 112, be = 1, pe = 1, ke = 0, ge = 1, Ae = 1, Ce = 1, we = 0, ve = 0, me = 0, xe = [], $e = [], ye = 0, Oe = null, je = -2, ze = -1, Ne = 0, Se = 1, Fe = 2, We = 3, qe = 0, Be = 1, De = "", Ee = "", Ge = "";
    function He(e1, a1, s1, t1, i1) {
        for(var f1, n1, o1 = 0, h1 = 0, u1 = 0, d1 = 0, g1 = 0, A1 = 0, C1 = 0, w1 = 0, m1 = 0, $1 = 0, y1 = 0, O1 = 0, j1 = 0, z1 = 0, R1 = 0, we1 = 0, $e1 = 0, Oe1 = 0, je1 = 0, ze1 = s1.length, Je = ze1 - 1, Re = "", Te = "", Ue = "", Ve = "", Xe = "", Ye = ""; R1 < ze1;){
            if (C1 = s1.charCodeAt(R1), R1 === Je) {
                if (h1 + d1 + u1 + o1 !== 0) {
                    if (0 !== h1) C1 = h1 === Z ? I : Z;
                    d1 = u1 = o1 = 0, ze1++, Je++;
                }
            }
            if (h1 + d1 + u1 + o1 === 0) {
                if (R1 === Je) {
                    if (we1 > 0) Te = Te.replace(c, "");
                    if (Te.trim().length > 0) {
                        switch(C1){
                            case M:
                            case K:
                            case W:
                            case J:
                            case I:
                                break;
                            default:
                                Te += s1.charAt(R1);
                        }
                        C1 = W;
                    }
                }
                if (1 === $e1) switch(C1){
                    case B:
                    case q:
                    case W:
                    case Y:
                    case X:
                    case D:
                    case E:
                    case U:
                        $e1 = 0;
                    case K:
                    case J:
                    case I:
                    case M:
                        break;
                    default:
                        for($e1 = 0, je1 = R1, g1 = C1, R1--, C1 = W; je1 < ze1;)switch(s1.charCodeAt(je1++)){
                            case I:
                            case J:
                            case W:
                                ++R1, C1 = g1, je1 = ze1;
                                break;
                            case V:
                                if (we1 > 0) ++R1, C1 = g1;
                            case B:
                                je1 = ze1;
                        }
                }
                switch(C1){
                    case B:
                        for(g1 = (Te = Te.trim()).charCodeAt(0), y1 = 1, je1 = ++R1; R1 < ze1;){
                            switch(C1 = s1.charCodeAt(R1)){
                                case B:
                                    y1++;
                                    break;
                                case q:
                                    y1--;
                                    break;
                                case Z:
                                    switch(A1 = s1.charCodeAt(R1 + 1)){
                                        case T:
                                        case Z:
                                            R1 = Qe(A1, R1, Je, s1);
                                    }
                                    break;
                                case G:
                                    C1++;
                                case D:
                                    C1++;
                                case Y:
                                case X:
                                    for(; (R1++) < Je && s1.charCodeAt(R1) !== C1;);
                            }
                            if (0 === y1) break;
                            R1++;
                        }
                        if (Ue = s1.substring(je1, R1), g1 === re) g1 = (Te = Te.replace(r, "").trim()).charCodeAt(0);
                        switch(g1){
                            case L:
                                if (we1 > 0) Te = Te.replace(c, "");
                                switch(A1 = Te.charCodeAt(1)){
                                    case ue:
                                    case ie:
                                    case fe:
                                    case Q:
                                        f1 = a1;
                                        break;
                                    default:
                                        f1 = xe;
                                }
                                if (je1 = (Ue = He(a1, f1, Ue, A1, i1 + 1)).length, me > 0 && 0 === je1) je1 = Te.length;
                                if (ye > 0) {
                                    if (f1 = Ie(xe, Te, Oe1), n1 = Pe(We, Ue, f1, a1, pe, be, je1, A1, i1, t1), Te = f1.join(""), (void 0) !== n1) {
                                        if (0 === (je1 = (Ue = n1.trim()).length)) A1 = 0, Ue = "";
                                    }
                                }
                                if (je1 > 0) switch(A1){
                                    case fe:
                                        Te = Te.replace(x, Me);
                                    case ue:
                                    case ie:
                                    case Q:
                                        Ue = Te + "{" + Ue + "}";
                                        break;
                                    case te:
                                        if (Ue = (Te = Te.replace(b, "$1 $2" + (Be > 0 ? De : ""))) + "{" + Ue + "}", 1 === Ae || 2 === Ae && Le("@" + Ue, 3)) Ue = "@" + N + Ue + "@" + Ue;
                                        else Ue = "@" + Ue;
                                        break;
                                    default:
                                        if (Ue = Te + Ue, t1 === de) Ve += Ue, Ue = "";
                                }
                                else Ue = "";
                                break;
                            default:
                                Ue = He(a1, Ie(a1, Te, Oe1), Ue, t1, i1 + 1);
                        }
                        Xe += Ue, O1 = 0, $e1 = 0, z1 = 0, we1 = 0, Oe1 = 0, j1 = 0, Te = "", Ue = "", C1 = s1.charCodeAt(++R1);
                        break;
                    case q:
                    case W:
                        if ((je1 = (Te = (we1 > 0 ? Te.replace(c, "") : Te).trim()).length) > 1) {
                            if (0 === z1) {
                                if ((g1 = Te.charCodeAt(0)) === Q || g1 > 96 && g1 < 123) je1 = (Te = Te.replace(" ", ":")).length;
                            }
                            if (ye > 0) {
                                if ((void 0) !== (n1 = Pe(Se, Te, a1, e1, pe, be, Ve.length, t1, i1, t1))) {
                                    if (0 === (je1 = (Te = n1.trim()).length)) Te = "\0\0";
                                }
                            }
                            switch(g1 = Te.charCodeAt(0), A1 = Te.charCodeAt(1), g1){
                                case re:
                                    break;
                                case L:
                                    if (A1 === oe || A1 === he) {
                                        Ye += Te + s1.charAt(R1);
                                        break;
                                    }
                                default:
                                    if (Te.charCodeAt(je1 - 1) === V) break;
                                    Ve += Ke(Te, g1, A1, Te.charCodeAt(2));
                            }
                        }
                        O1 = 0, $e1 = 0, z1 = 0, we1 = 0, Oe1 = 0, Te = "", C1 = s1.charCodeAt(++R1);
                }
            }
            switch(C1){
                case J:
                case I:
                    if (h1 + d1 + u1 + o1 + ve === 0) switch($1){
                        case E:
                        case X:
                        case Y:
                        case L:
                        case ae:
                        case _:
                        case T:
                        case ee:
                        case Z:
                        case Q:
                        case V:
                        case U:
                        case W:
                        case B:
                        case q:
                            break;
                        default:
                            if (z1 > 0) $e1 = 1;
                    }
                    if (h1 === Z) h1 = 0;
                    else if (ge + O1 === 0 && t1 !== te && Te.length > 0) we1 = 1, Te += "\0";
                    if (ye * qe > 0) Pe(Ne, Te, a1, e1, pe, be, Ve.length, t1, i1, t1);
                    be = 1, pe++;
                    break;
                case W:
                case q:
                    if (h1 + d1 + u1 + o1 === 0) {
                        be++;
                        break;
                    }
                default:
                    switch(be++, Re = s1.charAt(R1), C1){
                        case K:
                        case M:
                            if (d1 + o1 + h1 === 0) switch(w1){
                                case U:
                                case V:
                                case K:
                                case M:
                                    Re = "";
                                    break;
                                default:
                                    if (C1 !== M) Re = " ";
                            }
                            break;
                        case re:
                            Re = "\\0";
                            break;
                        case ce:
                            Re = "\\f";
                            break;
                        case se:
                            Re = "\\v";
                            break;
                        case P:
                            if (d1 + h1 + o1 === 0 && ge > 0) Oe1 = 1, we1 = 1, Re = "\f" + Re;
                            break;
                        case 108:
                            if (d1 + h1 + o1 + ke === 0 && z1 > 0) switch(R1 - z1){
                                case 2:
                                    if (w1 === ne && s1.charCodeAt(R1 - 3) === V) ke = w1;
                                case 8:
                                    if (m1 === le) ke = m1;
                            }
                            break;
                        case V:
                            if (d1 + h1 + o1 === 0) z1 = R1;
                            break;
                        case U:
                            if (h1 + u1 + d1 + o1 === 0) we1 = 1, Re += "\r";
                            break;
                        case Y:
                        case X:
                            if (0 === h1) d1 = d1 === C1 ? 0 : 0 === d1 ? C1 : d1;
                            break;
                        case G:
                            if (d1 + h1 + u1 === 0) o1++;
                            break;
                        case H:
                            if (d1 + h1 + u1 === 0) o1--;
                            break;
                        case E:
                            if (d1 + h1 + o1 === 0) u1--;
                            break;
                        case D:
                            if (d1 + h1 + o1 === 0) {
                                if (0 === O1) switch(2 * w1 + 3 * m1){
                                    case 533:
                                        break;
                                    default:
                                        y1 = 0, O1 = 1;
                                }
                                u1++;
                            }
                            break;
                        case L:
                            if (h1 + u1 + d1 + o1 + z1 + j1 === 0) j1 = 1;
                            break;
                        case T:
                        case Z:
                            if (d1 + o1 + u1 > 0) break;
                            switch(h1){
                                case 0:
                                    switch(2 * C1 + 3 * s1.charCodeAt(R1 + 1)){
                                        case 235:
                                            h1 = Z;
                                            break;
                                        case 220:
                                            je1 = R1, h1 = T;
                                    }
                                    break;
                                case T:
                                    if (C1 === Z && w1 === T && je1 + 2 !== R1) {
                                        if (33 === s1.charCodeAt(je1 + 2)) Ve += s1.substring(je1, R1 + 1);
                                        Re = "", h1 = 0;
                                    }
                            }
                    }
                    if (0 === h1) {
                        if (ge + d1 + o1 + j1 === 0 && t1 !== te && C1 !== W) switch(C1){
                            case U:
                            case ae:
                            case _:
                            case ee:
                            case E:
                            case D:
                                if (0 === O1) {
                                    switch(w1){
                                        case K:
                                        case M:
                                        case I:
                                        case J:
                                            Re += "\0";
                                            break;
                                        default:
                                            Re = "\0" + Re + (C1 === U ? "" : "\0");
                                    }
                                    we1 = 1;
                                } else switch(C1){
                                    case D:
                                        if (z1 + 7 === R1 && 108 === w1) z1 = 0;
                                        O1 = ++y1;
                                        break;
                                    case E:
                                        if (0 == (O1 = --y1)) we1 = 1, Re += "\0";
                                }
                                break;
                            case K:
                            case M:
                                switch(w1){
                                    case re:
                                    case B:
                                    case q:
                                    case W:
                                    case U:
                                    case ce:
                                    case K:
                                    case M:
                                    case I:
                                    case J:
                                        break;
                                    default:
                                        if (0 === O1) we1 = 1, Re += "\0";
                                }
                        }
                        if (Te += Re, C1 !== M && C1 !== K) $1 = C1;
                    }
            }
            m1 = w1, w1 = C1, R1++;
        }
        if (je1 = Ve.length, me > 0) {
            if (0 === je1 && 0 === Xe.length && 0 === a1[0].length == false) {
                if (t1 !== ie || 1 === a1.length && (ge > 0 ? Ee : Ge) === a1[0]) je1 = a1.join(",").length + 2;
            }
        }
        if (je1 > 0) {
            if (f1 = 0 === ge && t1 !== te ? (function(e2) {
                for(var a2, r1, s2 = 0, t2 = e2.length, i2 = Array(t2); s2 < t2; ++s2){
                    for(var f2 = e2[s2].split(l), n2 = "", o2 = 0, h2 = 0, u2 = 0, d2 = 0, b1 = f2.length; o2 < b1; ++o2){
                        if (0 === (h2 = (r1 = f2[o2]).length) && b1 > 1) continue;
                        if (u2 = n2.charCodeAt(n2.length - 1), d2 = r1.charCodeAt(0), a2 = "", 0 !== o2) switch(u2){
                            case T:
                            case ae:
                            case _:
                            case ee:
                            case M:
                            case D:
                                break;
                            default:
                                a2 = " ";
                        }
                        switch(d2){
                            case P:
                                r1 = a2 + Ee;
                            case ae:
                            case _:
                            case ee:
                            case M:
                            case E:
                            case D:
                                break;
                            case G:
                                r1 = a2 + r1 + Ee;
                                break;
                            case V:
                                switch(2 * r1.charCodeAt(1) + 3 * r1.charCodeAt(2)){
                                    case 530:
                                        if (Ce > 0) {
                                            r1 = a2 + r1.substring(8, h2 - 1);
                                            break;
                                        }
                                    default:
                                        if (o2 < 1 || f2[o2 - 1].length < 1) r1 = a2 + Ee + r1;
                                }
                                break;
                            case U:
                                a2 = "";
                            default:
                                if (h2 > 1 && r1.indexOf(":") > 0) r1 = a2 + r1.replace(v, "$1" + Ee + "$2");
                                else r1 = a2 + r1 + Ee;
                        }
                        n2 += r1;
                    }
                    i2[s2] = n2.replace(c, "").trim();
                }
                return i2;
            })(a1) : a1, ye > 0) {
                if ((void 0) !== (n1 = Pe(Fe, Ve, f1, e1, pe, be, je1, t1, i1, t1)) && 0 === (Ve = n1).length) return Ye + Ve + Xe;
            }
            if (Ve = f1.join(",") + "{" + Ve + "}", Ae * ke != 0) {
                if (2 === Ae && !Le(Ve, 2)) ke = 0;
                switch(ke){
                    case le:
                        Ve = Ve.replace(k, ":" + S + "$1") + Ve;
                        break;
                    case ne:
                        Ve = Ve.replace(p, "::" + N + "input-$1") + Ve.replace(p, "::" + S + "$1") + Ve.replace(p, ":" + F + "input-$1") + Ve;
                }
                ke = 0;
            }
        }
        return Ye + Ve + Xe;
    }
    function Ie(e1, a1, r1) {
        var c1 = a1.trim().split(o), s1 = c1, t1 = c1.length, i1 = e1.length;
        switch(i1){
            case 0:
            case 1:
                for(var f1 = 0, n1 = 0 === i1 ? "" : e1[0] + " "; f1 < t1; ++f1)s1[f1] = Je(n1, s1[f1], r1, i1).trim();
                break;
            default:
                f1 = 0;
                var l1 = 0;
                for(s1 = []; f1 < t1; ++f1)for(var h1 = 0; h1 < i1; ++h1)s1[l1++] = Je(e1[h1] + " ", c1[f1], r1, i1).trim();
        }
        return s1;
    }
    function Je(e1, a1, r1, c1) {
        var s1 = a1, t1 = s1.charCodeAt(0);
        if (t1 < 33) t1 = (s1 = s1.trim()).charCodeAt(0);
        switch(t1){
            case P:
                switch(ge + c1){
                    case 0:
                    case 1:
                        if (0 === e1.trim().length) break;
                    default:
                        return s1.replace(h, "$1" + e1.trim());
                }
                break;
            case V:
                switch(s1.charCodeAt(1)){
                    case 103:
                        if (Ce > 0 && ge > 0) return s1.replace(u, "$1").replace(h, "$1" + Ge);
                        break;
                    default:
                        return e1.trim() + s1.replace(h, "$1" + e1.trim());
                }
            default:
                if (r1 * ge > 0 && s1.indexOf("\f") > 0) return s1.replace(h, (e1.charCodeAt(0) === V ? "" : "$1") + e1.trim());
        }
        return e1 + s1;
    }
    function Ke(e1, a1, r1, c1) {
        var l1, o1 = 0, h1 = e1 + ";", u1 = 2 * a1 + 3 * r1 + 4 * c1;
        if (944 === u1) return (function(e2) {
            var a2 = e2.length, r2 = e2.indexOf(":", 9) + 1, c2 = e2.substring(0, r2).trim(), s1 = e2.substring(r2, a2 - 1).trim();
            switch(e2.charCodeAt(9) * Be){
                case 0:
                    break;
                case Q:
                    if (110 !== e2.charCodeAt(10)) break;
                default:
                    for(var t1 = s1.split((s1 = "", f)), i1 = 0, r2 = 0, a2 = t1.length; i1 < a2; r2 = 0, ++i1){
                        for(var l2 = t1[i1], o3 = l2.split(n); l2 = o3[r2];){
                            var h3 = l2.charCodeAt(0);
                            if (1 === Be && (h3 > L && h3 < 90 || h3 > 96 && h3 < 123 || h3 === R || h3 === Q && l2.charCodeAt(1) !== Q)) switch(isNaN(parseFloat(l2)) + (-1 !== l2.indexOf("("))){
                                case 1:
                                    switch(l2){
                                        case "infinite":
                                        case "alternate":
                                        case "backwards":
                                        case "running":
                                        case "normal":
                                        case "forwards":
                                        case "both":
                                        case "none":
                                        case "linear":
                                        case "ease":
                                        case "ease-in":
                                        case "ease-out":
                                        case "ease-in-out":
                                        case "paused":
                                        case "reverse":
                                        case "alternate-reverse":
                                        case "inherit":
                                        case "initial":
                                        case "unset":
                                        case "step-start":
                                        case "step-end":
                                            break;
                                        default:
                                            l2 += De;
                                    }
                            }
                            o3[r2++] = l2;
                        }
                        s1 += (0 === i1 ? "" : ",") + o3.join(" ");
                    }
            }
            if (s1 = c2 + s1 + ";", 1 === Ae || 2 === Ae && Le(s1, 1)) return N + s1 + s1;
            return s1;
        })(h1);
        else if (0 === Ae || 2 === Ae && !Le(h1, 1)) return h1;
        switch(u1){
            case 1015:
                return 97 === h1.charCodeAt(10) ? N + h1 + h1 : h1;
            case 951:
                return 116 === h1.charCodeAt(3) ? N + h1 + h1 : h1;
            case 963:
                return 110 === h1.charCodeAt(5) ? N + h1 + h1 : h1;
            case 1009:
                if (100 !== h1.charCodeAt(4)) break;
            case 969:
            case 942:
                return N + h1 + h1;
            case 978:
                return N + h1 + S + h1 + h1;
            case 1019:
            case 983:
                return N + h1 + S + h1 + F + h1 + h1;
            case 883:
                if (h1.charCodeAt(8) === Q) return N + h1 + h1;
                if (h1.indexOf("image-set(", 11) > 0) return h1.replace(z, "$1" + N + "$2") + h1;
                return h1;
            case 932:
                if (h1.charCodeAt(4) === Q) switch(h1.charCodeAt(5)){
                    case 103:
                        return N + "box-" + h1.replace("-grow", "") + N + h1 + F + h1.replace("grow", "positive") + h1;
                    case 115:
                        return N + h1 + F + h1.replace("shrink", "negative") + h1;
                    case 98:
                        return N + h1 + F + h1.replace("basis", "preferred-size") + h1;
                }
                return N + h1 + F + h1 + h1;
            case 964:
                return N + h1 + F + "flex-" + h1 + h1;
            case 1023:
                if (99 !== h1.charCodeAt(8)) break;
                return l1 = h1.substring(h1.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), N + "box-pack" + l1 + N + h1 + F + "flex-pack" + l1 + h1;
            case 1005:
                return t.test(h1) ? h1.replace(s, ":" + N) + h1.replace(s, ":" + S) + h1 : h1;
            case 1000:
                switch(o1 = (l1 = h1.substring(13).trim()).indexOf("-") + 1, l1.charCodeAt(0) + l1.charCodeAt(o1)){
                    case 226:
                        l1 = h1.replace(m, "tb");
                        break;
                    case 232:
                        l1 = h1.replace(m, "tb-rl");
                        break;
                    case 220:
                        l1 = h1.replace(m, "lr");
                        break;
                    default:
                        return h1;
                }
                return N + h1 + F + l1 + h1;
            case 1017:
                if (-1 === h1.indexOf("sticky", 9)) return h1;
            case 975:
                switch(o1 = (h1 = e1).length - 10, u1 = (l1 = (33 === h1.charCodeAt(o1) ? h1.substring(0, o1) : h1).substring(e1.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | l1.charCodeAt(7))){
                    case 203:
                        if (l1.charCodeAt(8) < 111) break;
                    case 115:
                        h1 = h1.replace(l1, N + l1) + ";" + h1;
                        break;
                    case 207:
                    case 102:
                        h1 = h1.replace(l1, N + (u1 > 102 ? "inline-" : "") + "box") + ";" + h1.replace(l1, N + l1) + ";" + h1.replace(l1, F + l1 + "box") + ";" + h1;
                }
                return h1 + ";";
            case 938:
                if (h1.charCodeAt(5) === Q) switch(h1.charCodeAt(6)){
                    case 105:
                        return l1 = h1.replace("-items", ""), N + h1 + N + "box-" + l1 + F + "flex-" + l1 + h1;
                    case 115:
                        return N + h1 + F + "flex-item-" + h1.replace(y, "") + h1;
                    default:
                        return N + h1 + F + "flex-line-pack" + h1.replace("align-content", "").replace(y, "") + h1;
                }
                break;
            case 973:
            case 989:
                if (h1.charCodeAt(3) !== Q || 122 === h1.charCodeAt(4)) break;
            case 931:
            case 953:
                if (true === j.test(e1)) {
                    if (115 === (l1 = e1.substring(e1.indexOf(":") + 1)).charCodeAt(0)) return Ke(e1.replace("stretch", "fill-available"), a1, r1, c1).replace(":fill-available", ":stretch");
                    else return h1.replace(l1, N + l1) + h1.replace(l1, S + l1.replace("fill-", "")) + h1;
                }
                break;
            case 962:
                if (h1 = N + h1 + (102 === h1.charCodeAt(5) ? F + h1 : "") + h1, r1 + c1 === 211 && 105 === h1.charCodeAt(13) && h1.indexOf("transform", 10) > 0) return h1.substring(0, h1.indexOf(";", 27) + 1).replace(i, "$1" + N + "$2") + h1;
        }
        return h1;
    }
    function Le(e1, a1) {
        var r1 = e1.indexOf(1 === a1 ? ":" : "{"), c1 = e1.substring(0, 3 !== a1 ? r1 : 10), s1 = e1.substring(r1 + 1, e1.length - 1);
        return Oe(2 !== a1 ? c1 : c1.replace(O, "$1"), s1, a1);
    }
    function Me(e1, a1) {
        var r1 = Ke(a1, a1.charCodeAt(0), a1.charCodeAt(1), a1.charCodeAt(2));
        return r1 !== a1 + ";" ? r1.replace($, " or ($1)").substring(4) : "(" + a1 + ")";
    }
    function Pe(e1, a1, r1, c1, s1, t1, i1, f1, n1, l1) {
        for(var o1, h1 = 0, u1 = a1; h1 < ye; ++h1)switch(o1 = $e[h1].call(Te, e1, u1, r1, c1, s1, t1, i1, f1, n1, l1)){
            case void 0:
            case false:
            case true:
            case null:
                break;
            default:
                u1 = o1;
        }
        if (u1 !== a1) return u1;
    }
    function Qe(e1, a1, r1, c1) {
        for(var s1 = a1 + 1; s1 < r1; ++s1)switch(c1.charCodeAt(s1)){
            case Z:
                if (e1 === T) {
                    if (c1.charCodeAt(s1 - 1) === T && a1 + 2 !== s1) return s1 + 1;
                }
                break;
            case I:
                if (e1 === Z) return s1 + 1;
        }
        return s1;
    }
    function Re(e1) {
        for(var a1 in e1){
            var r1 = e1[a1];
            switch(a1){
                case "keyframe":
                    Be = 0 | r1;
                    break;
                case "global":
                    Ce = 0 | r1;
                    break;
                case "cascade":
                    ge = 0 | r1;
                    break;
                case "compress":
                    we = 0 | r1;
                    break;
                case "semicolon":
                    ve = 0 | r1;
                    break;
                case "preserve":
                    me = 0 | r1;
                    break;
                case "prefix":
                    if (Oe = null, !r1) Ae = 0;
                    else if ("function" != typeof r1) Ae = 1;
                    else Ae = 2, Oe = r1;
            }
        }
        return Re;
    }
    function Te(a1, r2) {
        if ((void 0) !== this && this.constructor === Te) return e(a1);
        var s1 = a1, t1 = s1.charCodeAt(0);
        if (t1 < 33) t1 = (s1 = s1.trim()).charCodeAt(0);
        if (Be > 0) De = s1.replace(d, t1 === G ? "" : "-");
        if (t1 = 1, 1 === ge) Ge = s1;
        else Ee = s1;
        var i1, f1 = [
            Ge
        ];
        if (ye > 0) {
            if ((void 0) !== (i1 = Pe(ze, r2, f1, f1, pe, be, 0, 0, 0, 0)) && "string" == typeof i1) r2 = i1;
        }
        var n1 = He(xe, f1, r2, 0, 0);
        if (ye > 0) {
            if ((void 0) !== (i1 = Pe(je, n1, f1, f1, pe, be, n1.length, 0, 0, 0)) && "string" != typeof (n1 = i1)) t1 = 0;
        }
        return De = "", Ge = "", Ee = "", ke = 0, pe = 1, be = 1, we * t1 == 0 ? n1 : n1.replace(c, "").replace(g, "").replace(A, "$1").replace(C, "$1").replace(w, " ");
    }
    if (Te.use = function e1(a1) {
        switch(a1){
            case void 0:
            case null:
                ye = $e.length = 0;
                break;
            default:
                if ("function" == typeof a1) $e[ye++] = a1;
                else if ("object" == typeof a1) for(var r2 = 0, c1 = a1.length; r2 < c1; ++r2)e1(a1[r2]);
                else qe = 0 | !!a1;
        }
        return e1;
    }, Te.set = Re, (void 0) !== a) Re(a);
    return Te;
});
