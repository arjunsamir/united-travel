"use strict";
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = Hex;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _styled = require("./styled");
var _color = require("../../../../styles/helpers/color");
var _context = require("../../context");
function Hex() {
    var _useContext = _react.useContext(_context.ColorPickerContext), hex = _useContext.hex, tabIndex = _useContext.tabIndex, onChange = _useContext.onChange;
    var _useState = _react.useState(hex.substr(1)), _useState2 = _slicedToArray2["default"](_useState, 2), color = _useState2[0], setColor = _useState2[1];
    var _useState3 = _react.useState(false), _useState4 = _slicedToArray2["default"](_useState3, 2), isFocused = _useState4[0], setIsFocused = _useState4[1];
    _react.useEffect(function() {
        if (!isFocused) setColor(hex.substr(1));
    }, [
        hex,
        isFocused
    ]);
    var handleChange = function handleChange1(event) {
        var newHex = "#".concat(event.target.value);
        setColor(event.target.value);
        var rgba = _color.hexToRgba(newHex);
        if (_color.isValidColor(rgba)) onChange({
            hex: newHex,
            rgba: _color.decomposeColor(rgba).values,
            hsv: _color.decomposeColor(_color.rgbToHsv(rgba)).values
        });
    };
    var handleBlur = function handleBlur1() {
        setIsFocused(false);
        setColor(hex.substr(1));
    };
    return(/*#__PURE__*/ _react["default"].createElement(_styled.StyledHexInput, {
        value: color,
        bottomHelpText: "HEX",
        onChange: handleChange,
        onFocus: function onFocus() {
            return setIsFocused(true);
        },
        onBlur: handleBlur,
        icon: /*#__PURE__*/ _react["default"].createElement(_styled.StyledHexColorIcon, null, "#"),
        tabIndex: tabIndex
    }));
}
