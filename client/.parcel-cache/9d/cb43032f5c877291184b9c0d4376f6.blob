"use strict";
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _AssistiveText = _interopRequireDefault(require("../../AssistiveText"));
var _indicatorLi = _interopRequireDefault(require("../styled/indicatorLi"));
var _indicatorButton = _interopRequireDefault(require("../styled/indicatorButton"));
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf2["default"](Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf2["default"](this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn2["default"](this, result);
    };
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function getAssistiveText(header) {
    if (typeof header === 'string') return "".concat(header, " Tab");
    return undefined;
}
var Indicator1 = /*#__PURE__*/ function(_Component) {
    _inherits2["default"](Indicator2, _Component);
    var _super = _createSuper(Indicator2);
    function Indicator2(props) {
        var _this;
        _classCallCheck2["default"](this, Indicator2);
        _this = _super.call(this, props);
        _this.indicatorRef = /*#__PURE__*/ _react["default"].createRef();
        return _this;
    }
    _createClass2["default"](Indicator2, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this$props = this.props, onCreate = _this$props.onCreate, indicatorID = _this$props.indicatorID;
                onCreate({
                    indicatorID: indicatorID,
                    ref: this.indicatorRef
                });
            }
        },
        {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                var onDestroy = this.props.onDestroy;
                onDestroy(this.indicatorRef);
            }
        },
        {
            key: "getTabIndex",
            value: function getTabIndex(id) {
                if (this.isSelected(id)) return 0;
                return -1;
            }
        },
        {
            key: "isSelected",
            value: function isSelected(id) {
                var selectedItem = this.props.selectedItem;
                return selectedItem === id;
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props2 = this.props, indicatorID = _this$props2.indicatorID, containerID = _this$props2.containerID, header = _this$props2.header, onSelect = _this$props2.onSelect;
                var assistiveText = getAssistiveText(header);
                var isSelected = this.isSelected(indicatorID);
                return(/*#__PURE__*/ _react["default"].createElement(_indicatorLi["default"], {
                    role: "presentation",
                    key: indicatorID
                }, /*#__PURE__*/ _react["default"].createElement(_indicatorButton["default"], {
                    id: indicatorID,
                    isSelected: isSelected,
                    role: "tab",
                    tabIndex: this.getTabIndex(indicatorID),
                    "aria-selected": isSelected,
                    "aria-controls": containerID,
                    title: assistiveText,
                    onClick: function onClick() {
                        return onSelect(indicatorID);
                    },
                    ref: this.indicatorRef
                }, /*#__PURE__*/ _react["default"].createElement(_AssistiveText["default"], {
                    text: assistiveText
                }))));
            }
        }
    ]);
    return Indicator2;
}(_react.Component);
exports["default"] = Indicator1;
Indicator1.propTypes = {
    indicatorID: _propTypes["default"].string,
    containerID: _propTypes["default"].string,
    header: _propTypes["default"].oneOfType([
        _propTypes["default"].string,
        _propTypes["default"].node
    ]),
    onSelect: _propTypes["default"].func,
    onCreate: _propTypes["default"].func,
    onDestroy: _propTypes["default"].func,
    selectedItem: _propTypes["default"].string
};
Indicator1.defaultProps = {
    indicatorID: undefined,
    containerID: undefined,
    header: undefined,
    onSelect: function onSelect() {
    },
    onCreate: function onCreate() {
    },
    onDestroy: function onDestroy() {
    },
    selectedItem: undefined
};
